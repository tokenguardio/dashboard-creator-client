name: Build and push to ECR(tokenguard-prod)

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:

env:
  AWS_REGION: eu-west-1

jobs:
  test-build:
    name: Check if image builds correctly on PR
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Build image
        run: docker build -f Dockerfile .

  build-push:
    name: Build and push to ECR(tokenguard-prod)
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        # Setup hardware emulator using QEMU
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64
        # Setup Docker Builderx for multi-arch images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag and push to Amazon ECR
        id: build-push-ecr
        uses: docker/build-push-action@v3
        with:
          push: true
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.login-ecr.outputs.registry }}/tokenguard-prod-dashboard-creator-client:${{ github.sha }}
      - name: Image digest
        run: echo ${{ steps.build-push-ecr.outputs.digest }}

  deploy-eks:
    name: Deploy image on EKS(tokenguard-prod)
    needs: build-push
    runs-on: self-hosted

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Deploy to tokenguard-prod
        uses: christallire/kubectl-aws-eks@1.1.0-arm64-fix2
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: tokenguard-prod-dashboard-creator-client
          IMAGE_TAG: ${{ github.sha }}
        with:
          args: -n prod set image deployment/dashboard-creator-client dashboard-creator-client=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: verify deployment
        uses: christallire/kubectl-aws-eks@1.1.0-arm64-fix2
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_PROD }}
        with:
          args: -n prod rollout status deployment/dashboard-creator-client
